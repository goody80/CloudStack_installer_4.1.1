### This script is an installer for the cloudstack setup
### MySQL DB Stay in local requirement
### Script by Ralf.yang ralf.yang@@gsshop.com, goody80762@gmail.com
###
#!/bin/bash
source cloudstack_install.conf
alias cp=cp


IP_val=(`ifconfig | grep "inet addr" | awk '{print $2}' |sed -e 's/addr://g' | fgrep -v "127.0.0.1"`)
GrepTypes=`grep IPADDR /etc/sysconfig/network-scripts/ifcfg-* | fgrep -v "lo:" |fgrep -v "#" | awk -F ":" '{print $1}' | awk -F "ifcfg-" '{print $2}'`



	if [[ $cloudstack_manager_fqdn = "cloudstack.test.com" ]] 
	then	
		echo "=================================================================="
		echo " Please insert a hostname for CloudStack manager server as a FQDN"
		echo "=================================================================="
		read manager_fqdn
		sed -i "s/cloudstack.test.com/$manager_fqdn/g" ./cloudstack_install.conf
	fi


	if [[ ${#IP_val[@]} != "1" ]] 
	then
		echo "=================================================================="
		echo " Please select an IP address on CloudStack manager server"
		echo "=================================================================="
		echo ""
		count=0
		cC=1    
			while [ $count -lt ${#IP_val[@]} ]
			do      
			        printf "%-20s %-10s %-10s\n" "${IP_val[$count]}" "--->" "[$cC]"   
				let cC=$cC+1
				let count=$count+1
			done

		read Input_num
		let Input_num=$Input_num-1

		host_ip=${IP_val[$Input_num]}
		echo "you choice ${IP_val[$Input_num]}"
	else
		host_ip=${IP_val[@]}
	fi

	if [[ $nfs_ip = "NFS_IP" ]] 
	then
		echo "=================================================================="
		echo " Please insert an IP address on NFS server"
		echo "=================================================================="
		read Nfs
		sed -i "s/NFS_IP/$Nfs/g" ./cloudstack_install.conf

		if [[ $nfs_ip != $host_ip ]]
		then 
			echo ""
			echo ""
			echo ""
			echo "=================================================================="
			echo " NFS server IP and Manager server IP is not same."
			echo " Please check a directory out in $Nfs server as below"
			echo " mkdir -p /data/nfs/Primary /data/nfs/Secondary"
			echo "=================================================================="
		fi
	fi

echo ""
echo ""
echo ""
echo "========================================"
echo " All settings had been updated as below"
echo "========================================"
cat ./cloudstack_install.conf
echo "CloudStack Manager IP address is $host_ip"


echo "==============================="
echo " All settings are okay? [y/n]]"
echo "==============================="
read ConfirmA

	if [[ $ConfirmA != "y" ]]
	then
		echo "==============================="
		echo " Setup has been stopped"
		echo "==============================="
		exit 0;
	fi


source cloudstack_install.conf

yum -y install ntp
chkconfig ntpd on
service ntpd restart


sed -i "/HOSTNAME=/d" /etc/sysconfig/network
echo "HOSTNAME=$cloudstack_manager_fqdn" >> /etc/sysconfig/network

sed -i "/$host_ip/d" /etc/hosts
echo "$host_ip  $cloudstack_manager_fqdn" >> /etc/hosts

hostname $cloudstack_manager_fqdn


Host_N=`echo "$cloudstack_manager_fqdn" | awk -F '.' '{print $1}'`
DomainN=`echo "$cloudstack_manager_fqdn" | sed -e "s/$Host_N\.//g"`

cd /etc/yum.repos.d/
rm -f CloudStack.repo CentOS-Base.repo
echo "[cloudstack]" > /etc/yum.repos.d/cloudstack.repo
echo "name=cloudstack" >> /etc/yum.repos.d/cloudstack.repo
echo "baseurl=http://cloudstack.apt-get.eu/rhel/4.1/" >> /etc/yum.repos.d/cloudstack.repo
echo "gpgcheck=0" >> /etc/yum.repos.d/cloudstack.repo

yum clean all

yum -y install cloudstack-management
yum -y install mysql-server
 
echo "innodb_rollback_on_timeout=1" >> /etc/my.cnf
echo "innodb_lock_wait_timeout=600" >> /etc/my.cnf
echo "max_connections=350" >> /etc/my.cnf
echo "log-bin=mysql-bin" >> /etc/my.cnf
echo "binlog-format = 'ROW'" >> /etc/my.cnf

chkconfig mysqld on
service mysqld start
/usr/bin/mysqladmin -u root password "$mysqlpass"
/usr/bin/mysqladmin -u root -h $cloudstack_manager_fqdn password "$mysqlpass"

sed -i '/^SELINUX=/d' /etc/selinux/config
echo "SELINUX=disabled" >> /etc/selinux/config

cloudstack-setup-databases cloud:$mysqlpass@localhost --deploy-as=root:$mysqlpass -i $host_ip
mkdir -p /data/nfs/$nfs_primary /data/nfs/$nfs_secondary

### NFS setup
yum -y install nfs-utils
cp -f /etc/exports /etc/exports_backup 2> /dev/null
echo "/data/nfs  *(rw,async,no_root_squash)" > /etc/exports
exportfs -a


mv -f /etc/sysconfig/nfs /etc/sysconfig/nfs_backup
echo "LOCKD_TCPPORT=32803" > /etc/sysconfig/nfs
echo "LOCKD_UDPPORT=32769" >> /etc/sysconfig/nfs
echo "MOUNTD_PORT=892" >> /etc/sysconfig/nfs
echo "RQUOTAD_PORT=875" >> /etc/sysconfig/nfs
echo "STATD_PORT=662" >> /etc/sysconfig/nfs
echo "STATD_OUTGOING_PORT=2020" >> /etc/sysconfig/nfs


# vi /etc/sysconfig/iptables
cp -f /etc/sysconfig/iptables /etc/sysconfig/iptables_backup_`date '+%Y-%m-%d'`
echo "# Generated by iptables-save v1.4.7 on Fri Aug 30 13:37:59 2013" > /etc/sysconfig/iptables
echo "*nat" >> /etc/sysconfig/iptables
echo ":PREROUTING ACCEPT [26:1560]" >> /etc/sysconfig/iptables
echo ":POSTROUTING ACCEPT [0:0]" >> /etc/sysconfig/iptables
echo ":OUTPUT ACCEPT [0:0]" >> /etc/sysconfig/iptables
echo "-A PREROUTING -i eth0 -p tcp -m tcp --dport 80 -j REDIRECT --to-ports 8080 " >> /etc/sysconfig/iptables
echo "-A PREROUTING -i eth0 -p tcp --dport 80 -j DNAT --to-destination :8080" >> /etc/sysconfig/iptables
echo "COMMIT" >> /etc/sysconfig/iptables
echo "# Completed on Fri Aug 30 13:37:59 2013" >> /etc/sysconfig/iptables
echo "# Generated by iptables-save v1.4.7 on Fri Aug 30 13:37:59 2013" >> /etc/sysconfig/iptables
echo "*mangle" >> /etc/sysconfig/iptables
echo ":PREROUTING ACCEPT [37290:24766618]" >> /etc/sysconfig/iptables
echo ":INPUT ACCEPT [37290:24766618]" >> /etc/sysconfig/iptables
echo ":FORWARD ACCEPT [0:0]" >> /etc/sysconfig/iptables
echo ":OUTPUT ACCEPT [37590:5844059]" >> /etc/sysconfig/iptables
echo ":POSTROUTING ACCEPT [37594:5844187]" >> /etc/sysconfig/iptables
echo "COMMIT" >> /etc/sysconfig/iptables
echo "# Completed on Fri Aug 30 13:37:59 2013" >> /etc/sysconfig/iptables
echo "# Generated by iptables-save v1.4.7 on Fri Aug 30 13:37:59 2013" >> /etc/sysconfig/iptables
echo "*filter" >> /etc/sysconfig/iptables
echo ":INPUT ACCEPT [37301:24801374]" >> /etc/sysconfig/iptables
echo ":FORWARD ACCEPT [0:0]" >> /etc/sysconfig/iptables
echo ":OUTPUT ACCEPT [37601:5845191]" >> /etc/sysconfig/iptables
echo "-A INPUT -p tcp -m tcp --dport 9090 -j ACCEPT " >> /etc/sysconfig/iptables
echo "-A INPUT -p tcp -m tcp --dport 8250 -j ACCEPT " >> /etc/sysconfig/iptables
echo "-A INPUT -p tcp -m tcp --dport 7080 -j ACCEPT " >> /etc/sysconfig/iptables
echo "-A INPUT -p tcp -m tcp --dport 8080 -j ACCEPT " >> /etc/sysconfig/iptables
echo "COMMIT" >> /etc/sysconfig/iptables

service iptables restart
service iptables save

chkconfig iptables on

####### Both Manager Serever & Hypervisor ###########
cp -f /etc/idmapd.conf /etc/idmapd.conf_back_`date '+%Y-%m-%d'`
sed -i 's/\#Domain /Domain /g' /etc/idmapd.conf
sed -i "s/\Domain \= local.domain.edu/Domain \= $DomainN/g" /etc/idmapd.conf
sed -i "s/\Domain \= localdomain/Domain \= $DomainN/g" /etc/idmapd.conf

# Copy vhd-util
cd  /usr/share/cloudstack-common/scripts/vm/hypervisor/xenserver
cp -f /data/var/vhd-util ./
#wget http://download.cloud.com.s3.amazonaws.com/tools/vhd-util

####### Command for nfs ###########
service rpcbind start
service nfs start
chkconfig nfs on
chkconfig rpcbind on

### Create the SSVM image with mount
mkdir -p /mnt/$nfs_secondary
mount -t nfs $nfs_ip:/data/nfs/$nfs_secondary /mnt/$nfs_secondary/
/usr/share/cloudstack-common/scripts/storage/secondary/cloud-install-sys-tmplt -m /mnt/$nfs_secondary -u http://download.cloud.com/templates/acton/acton-systemvm-02062012.vhd.bz2 -h xenserver -F

### Make a default configuration for the tomcat
ln -sf /etc/cloudstack/management/tomcat6-nonssl.conf /etc/cloudstack/management/tomcat6.conf
ln -sf /etc/cloudstack/management/server-nonssl.xml /etc/cloudstack/management/server.xml


sudo /usr/share/cloudstack-common/scripts/vm/systemvm/injectkeys.sh /var/cloudstack/management/.ssh/id_rsa.pub /var/cloudstack/management/.ssh/id_rsa /usr/share/cloudstack-common/vms/systemvm.iso


mysql -p$mysqlpass -e 'drop database cloud'
mysql -p$mysqlpass -e 'drop database cloud_usage'
cloudstack-setup-databases cloud:$mysqlpass@localhost --deploy-as=root:$mysqlpass

rm -rf /var/log/cloudstack-management/*
cloudstack-setup-management 

chkconfig cloudstack-management on
/etc/init.d/cloudstack-management start

echo "=================================================================="
echo " All setting & install had been done"
echo " Please Reboot the server before you start"
echo "=================================================================="
